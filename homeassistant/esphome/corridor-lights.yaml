esphome:
  name: corridor-lights
  friendly_name: Corridor lights

esp8266:
  board: esp01_1m
  restore_from_flash: True

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Q3jtHxFLs8BXPTuvLeuLGrVDh7b/mmfk4S3Oc37/TDc="

ota:
  - platform: esphome
    password: "101cfdcc0e37fc4169a89da645954015"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Corridor-Lights Fallback Hotspot"
    password: "8d8zwQaqNhe7"

captive_portal:

# PRODINo WIFI-ESP WROOM-02 V1 settings
globals: # Create global variable to be used later on
  - id: is_night_time # Store state of day (false) or night (true)
    type: bool
    restore_value: no
    initial_value: 'false'

spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  miso_pin: GPIO12

mcp23s08:
  - id: mcp23s08_hub
    cs_pin: GPIO15
    deviceaddress: 0

switch:
  - platform: template
    id: night_time
    name: "Night switch"
    lambda: |-
      return id(is_night_time);
    turn_on_action:
      - logger.log: "Night time swithch is on"
      - switch.turn_on: small_lamp_relay
      - light.control:
          id: main_light
          brightness: 50%
      - lambda: |-
          id(is_night_time) = true; // Night time is set
    turn_off_action:
      - logger.log: "Night time swithch is off"
      - switch.turn_off: small_lamp_relay
      - light.control:
          id: main_light
          brightness: 100%
      - lambda: |-
          id(is_night_time) = false; // Day time is set

  - platform: gpio
    id: small_lamp_relay
    name: "Small lamps relay"
    pin:
      mcp23xxx: mcp23s08_hub
      number: 4
      mode: OUTPUT
      inverted: False

  - platform: gpio
    id: relay2
    name: "RELAY2"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 5
      mode: OUTPUT
      inverted: False

  - platform: gpio
    id: relay3
    name: "RELAY3"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 6
      mode: OUTPUT
      inverted: False

  - platform: gpio
    id: relay4
    name: "RELAY4"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 7
      mode: OUTPUT
      inverted: False

binary_sensor:
  - platform: gpio
    id: pir_sensor_short
    name: "PIR Sensor short"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 0
      mode: INPUT
      inverted: True
    on_state:
      - script.execute: light_timer

  - platform: gpio
    id: pir_sensor_long
    name: "PIR Sensor long"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 1
      mode: INPUT
      inverted: True
    on_state:
      - script.execute: light_timer

  - platform: gpio
    id: input3
    name: "INPUT3"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 2
      mode: INPUT
      inverted: True

  - platform: gpio
    id: input4
    name: "INPUT4"
    internal: true
    pin:
      mcp23xxx: mcp23s08_hub
      number: 3
      mode: INPUT
      inverted: True

# >>> Corrodor devices logic
output:
  - platform: esp8266_pwm
    id: pwm_light
    pin: GPIO5
    frequency: 1000 Hz

light:
  - platform: monochromatic
    name: "Main Light"
    id: main_light
    output: pwm_light
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - script.execute: light_timer

script:
  - id: light_timer
    mode: restart
    then:
      - logger.log: "Light timer is started"
      - light.turn_on:
          id: main_light
          transition_length: 3s
      - delay: 2min #10s
      - light.turn_off:
          id: main_light
          transition_length: 60s #10s